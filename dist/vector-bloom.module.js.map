{"mappings":"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","sources":["src/vector-bloom.js","src/vector-bloom-point.js","src/vector-bloom-path.js"],"sourcesContent":["import { VectorBloomPoint } from \"./vector-bloom-point.js\"\nimport { VectorBloomPath, VectorBloomNode } from \"./vector-bloom-path.js\"\n\n/**\n * @typedef BloomConfig\n * @property {PetalConfig[]} petals\n * @property {CenterConfig} [center]\n */\n\n/**\n * @typedef CenterConfig\n * @property {number} radius The radius of the flower center\n * @property {CenterArrangment[]} arrangement\n */\n\n/** \n * @typedef PetalConfig\n * \t@property {PetalGeometry} geometry\n * \t@property {FillStyle} [fill]\n */\n\n/** \n * @typedef FillStyle\n * @property {GradientStop[]} color hex string\n * @property {number} strokeWidth?\n * @property {string} strokeColor? hex string\n * @property {ShadowConfig} [shadow]\n */\n\n/** \n * @typedef ShadowConfig\n * @property {number} [offsetX] \n * @property {number} [offsetY]\n * @property {number} blur\n * @property {string} [color] hex string\n * @property {number} [opacity]\n */\n\n/** \n * @typedef GradientStop\n * @property {string} color\n * @property {number} [offset]\n */\n\n/** \n * @typedef PetalGeometry\n * @property {number} width The width of the petal at the center\n * @property {number} count The number of petals\n * @property {number} length \n * @property {number} [innerWidth] The width of the petal at the radial origin\n * @property {number} [outerWidth] The width of the petal at the outer edge\n * @property {number} [angleOffset] Rotate the petal arrangement. In degrees\n * @property {number} [radialOffset] The radial offset from the center component. This is considered\n * as factor of center radius. Sensible values are -1 to 1\n * @property {number} [balance] The point where the center balance of the petal is considered. Sensible\n * values are in the range [0, 1]. This affects how the width value is treated\n * @property {number} [smoothing] The pointness of the petal. Sensible values are from 0 - very pointy to\n * 1 - overlysmooth (this results in pointiness too)\n * @property {boolean} [extendOutside] Extend the outer edge of the metal to form a smooth curve\n * @property {number} [offsetX]\n * @property {number} [offsetY]\n * @property {number} [jitter] Introduce random noise in the geometry\n */\n\n/** \n * @typedef CenterArrangment\n * @property {CenterGeometry} geometry\n * @property {CenterFill}\t[fill] \n */\n\n\n/** \n * @typedef CenterFill \n * @property {FillStyle} base\n * @property {FillStyle} tip Based on age, tips don't always exist\n * @property {string} [background] a hex color value\n */\n\n/** \n * @typedef CenterGeometry\n * @property {Array<number>} age 0 forms a sleeping floret. Array length is 2\n * 0.5 makes a vertical floret\n * 1 makes a floret radiating outward\n * This is an array of two integers between 0 1, \n * Age is linearly mapped along the radius\n * @property {Array<number>} [range] Range is the percentage range of center to occupy. Array length is 2\n * ex: [0,1] occupies the full center\n * [0.75, 1] occupies outer 25 percent of the center radius\n * @property {number} density How closely the center elements are packed. Lower value results in\n * higher density.\n * @property {Array<number>} size Linearly mapped along radius. Array length is 2\n */\n\nconst GOLDEN_RATIO = (1 + Math.sqrt(5)) / 2\nconst GOLDEN_RADIANS = 2 * (Math.PI - (GOLDEN_RATIO * Math.PI / (1 + GOLDEN_RATIO)))\n\nexport class VectorBloom {\n\t/**\n\t * @param {BloomConfig} config \n\t */\n\tconstructor(config) {\n\t\t/**\n\t\t * Assign a unique id to this flower so that the elements created have unique\n\t\t * id names and classes.\n\t\t */\n\t\tthis.id = (Math.random() + \"\").replace(\".\", \"\")\n\n\t\tVectorBloom.FillDefaults(config)\n\n\t\tthis.petals = /** @type {VectorBloomPath[][]} */ ([])\n\t\tthis.center = /** @type {CenterArrangement[]} */ ([])\n\t\tthis.backgrounds = /** @type {SVGCircleElement[]} */ ([])\n\t\tthis.config = config\n\t\tthis.svgElement = createSVGElement()\n\t\tthis.maxWidth = 100\n\n\t\tlet zoomLevel = 1\n\t\tconst _this = this\n\t\tthis.svgElement.addEventListener(\"wheel\", function( /** @type {WheelEvent} */ event) {\n\t\t\tevent.preventDefault()\n\t\t\tzoomLevel += event.deltaY * 0.001\n\t\t\tzoomLevel = Math.max(0.1, Math.min(zoomLevel, 5))\n\t\t\tconst zoomedWidth = _this.maxWidth * zoomLevel\n\t\t\tconst difference = (_this.maxWidth - zoomedWidth) / 2\n\t\t\t_this.svgElement.setAttribute(\"viewBox\", `${difference} ${difference} ${zoomedWidth} ${zoomedWidth}`)\n\t\t})\n\n\t\tthis.update()\n\t\tthis.updateDrawingSize()\n\t}\n\n\t/**\n\t * Currently update and create are the same function\n\t * Use this to update only geometry\n\t */\n\tupdateGeometry() {\n\t\tthis.petals.length = 0\n\t\tthis.center.length = 0\n\t\tthis.backgrounds.length = 0\n\t\tthis.config.petals.forEach((petalConfig) =>\n\t\t\tthis.petals.unshift(createPetals(petalConfig, this.config.center.radius)))\n\t\tthis.config.center.arrangement.forEach(arrangement => {\n\t\t\tthis.center.unshift(createCenter(arrangement.geometry, this.config.center.radius))\n\t\t\tif (arrangement.fill.background) {\n\t\t\t\tthis.backgrounds.push(createCircleElement({\n\t\t\t\t\tradius: this.config.center.radius * Math.max.apply(null, arrangement.geometry.range),\n\t\t\t\t\tcolor: arrangement.fill.background\n\t\t\t\t}))\n\t\t\t}\n\t\t})\n\t\tthis.backgrounds.sort((c1, c2) => {\n\t\t\tconst r1 = parseFloat(c1.getAttribute(\"r\"))\n\t\t\tconst r2 = parseFloat(c2.getAttribute(\"r\"))\n\t\t\treturn r2 - r1\n\t\t})\n\t\tconst elementsInsertionTarget = this.svgElement.querySelector(\"g\")\n\t\telementsInsertionTarget.innerHTML = \"\"\n\n\t\tthis.backgrounds.forEach(c => elementsInsertionTarget.appendChild(c))\n\t\tthis.petals.forEach((petalArray, i) => {\n\t\t\tconst g = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\")\n\t\t\telementsInsertionTarget.appendChild(g)\n\t\t\tg.setAttribute(\"fill\", `url(#petal${this.id}-Gradient-${i})`)\n\t\t\tg.id = `petalGroup${this.id}-${i}`\n\t\t\tg.classList.add(`petalStyles${this.id}-${i}`)\n\t\t\tpetalArray.forEach(petal => g.appendChild(petal.element))\n\t\t})\n\t\tthis.center.forEach((arrangement, i) => {\n\t\t\tconst baseG = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\")\n\t\t\tbaseG.setAttribute(\"fill\", `url(#centerBase${this.id}-Gradient-${i})`)\n\t\t\tbaseG.id = `centerBaseGroup${this.id}-${i}`\n\t\t\tarrangement.bases.forEach(base => {\n\t\t\t\tbaseG.appendChild(base.element)\n\t\t\t})\n\t\t\tbaseG.classList.add(`centerBaseStyles${this.id}-${i}`)\n\t\t\telementsInsertionTarget.appendChild(baseG)\n\n\t\t\tconst tipG = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\")\n\t\t\ttipG.setAttribute(\"fill\", `url(#centerTip${this.id}-Gradient-${i})`)\n\t\t\ttipG.id = `centerTipGroup${this.id}-${i}`\n\t\t\tarrangement.tips.forEach(tip => {\n\t\t\t\ttipG.appendChild(tip.element)\n\t\t\t})\n\t\t\ttipG.classList.add(`centerTipStyles${this.id}-${i}`)\n\t\t\telementsInsertionTarget.appendChild(tipG)\n\t\t})\n\t}\n\n\t/**\n\t * Currently update and create are the same function.\n\t * Use this to update only styles. Useful when only file, stroke or gradient is changed\n\t */\n\tupdateStyles() {\n\t\tlet defs = this.svgElement.querySelector(\"defs\")\n\t\tdefs.innerHTML = \"\"\n\n\t\t//@ts-ignore this is intended. Container is already an svg element, its style is in the svg NS\n\t\tlet styleTag = /** @type {SVGStyleElement} */ (this.svgElement.querySelector(\"style\"))\n\t\tstyleTag.innerHTML = \"\"\n\n\t\tconst highlightString = \".vectorBloomHighlight {\" +\n\t\t\t\"fill: blue;\" +\n\t\t\t\"opacity: 0.5;\" +\n\t\t\t\"stroke: blue;\" +\n\t\t\t\"stroke-width: 5;\" +\n\t\t\t\"}\"\n\t\tstyleTag.appendChild(document.createTextNode(highlightString))\n\n\t\tconst _this = this\n\t\t/**\n\t\t * @param {string} id \n\t\t * @param {ShadowConfig} config \n\t\t * @param {SVGElement} target \n\t\t * @param {boolean} [filterOnElements]\n\t\t */\n\t\tfunction createAndApplyFilter(id, config, target, filterOnElements) {\n\t\t\tif (config.blur == 0) {\n\t\t\t\ttarget.removeAttribute(\"filter\")\n\t\t\t\tif (target.children[0] && target.children[0].hasAttribute(\"filter\"))\n\t\t\t\t\tfor (let i = 0; i < target.children.length; i++)\n\t\t\t\t\t\ttarget.children[i].removeAttribute(\"filter\")\n\t\t\t\treturn\n\t\t\t}\n\n\t\t\tconst filter = createShadowFilter(id, config)\n\t\t\tif (filterOnElements)\n\t\t\t\tfor (let i = 0; i < target.children.length; i++)\n\t\t\t\t\ttarget.children[i].setAttribute(\"filter\", `url(#${id})`)\n\t\t\telse\n\t\t\t\ttarget.setAttribute(\"filter\", `url(#${filter.id})`)\n\t\t\tdefs.appendChild(filter)\n\t\t}\n\n\t\t/**\n\t\t * @param {string} prefix \n\t\t * @param {number} id \n\t\t * @param {GradientStop[]} config \n\t\t * @param {number} configIndex\n\t\t */\n\t\tfunction createAndApplyRGradient(prefix, id, config, configIndex) {\n\t\t\tconst gradient = createRadialGradient(`${prefix}Gradient-${id}`, config)\n\n\t\t\tlet radius\n\t\t\tif (prefix == `petal${_this.id}-`) {\n\t\t\t\tradius = _this.config.center.radius + _this.config.petals[configIndex].geometry.length\n\t\t\t} else\n\t\t\t\tradius = _this.config.center.arrangement[configIndex].geometry.range[1] * _this.config.center.radius\n\n\t\t\t/**\n\t\t\t * why 1.5?\n\t\t\t * This produces a more natural color spread between stops\n\t\t\t */\n\t\t\tgradient.setAttribute(\"r\", radius * 1.5 + \"\")\n\t\t\tdefs.appendChild(gradient)\n\t\t}\n\n\t\tthis.config.petals.forEach((petalConfig, index) => {\n\t\t\tconst inverseIndex = (this.config.petals.length - (index + 1))\n\t\t\tcreateAndApplyRGradient(`petal${this.id}-`, inverseIndex, petalConfig.fill.color, index)\n\t\t\tcreateAndApplyFilter(`petalShadow${this.id}-${inverseIndex}`, petalConfig.fill.shadow,\n\t\t\t\tthis.svgElement.querySelector(`#petalGroup${this.id}-${inverseIndex}`))\n\n\t\t\tconst styleString = `.petalStyles${this.id}-${inverseIndex} {` +\n\t\t\t\t`stroke: ${petalConfig.fill.strokeColor};` +\n\t\t\t\t`stroke-width: ${petalConfig.fill.strokeWidth};` +\n\t\t\t\t\"}\"\n\t\t\tstyleTag.appendChild(document.createTextNode(styleString))\n\t\t})\n\n\t\tthis.config.center.arrangement.forEach((arrangement, index) => {\n\t\t\tconst inverseIndex = this.config.center.arrangement.length - (index + 1)\n\t\t\tcreateAndApplyRGradient(`centerBase${this.id}-`, inverseIndex, arrangement.fill.base.color, index)\n\t\t\tcreateAndApplyRGradient(`centerTip${this.id}-`, inverseIndex, arrangement.fill.tip.color, index)\n\t\t\tcreateAndApplyFilter(`centerBaseShadow${this.id}-${inverseIndex}`, arrangement.fill.base.shadow,\n\t\t\t\tthis.svgElement.querySelector(`#centerBaseGroup${this.id}-${inverseIndex}`), true)\n\t\t\tcreateAndApplyFilter(`centerTipShadow${this.id}-${inverseIndex}`, arrangement.fill.tip.shadow,\n\t\t\t\tthis.svgElement.querySelector(`#centerTipGroup${this.id}-${inverseIndex}`))\n\t\t\tconst styleString = `.centerBaseStyles${this.id}-${inverseIndex} {` +\n\t\t\t\t`stroke: ${arrangement.fill.base.strokeColor};` +\n\t\t\t\t`stroke-width: ${arrangement.fill.base.strokeWidth};` +\n\t\t\t\t\"}\"\n\t\t\tstyleTag.appendChild(document.createTextNode(styleString))\n\t\t\tconst styleString2 = `.centerTipStyles${this.id}-${inverseIndex} {` +\n\t\t\t\t`stroke: ${arrangement.fill.tip.strokeColor};` +\n\t\t\t\t`stroke-width: ${arrangement.fill.tip.strokeWidth};` +\n\t\t\t\t\"}\"\n\t\t\tstyleTag.appendChild(document.createTextNode(styleString2))\n\t\t})\n\t}\n\n\t/**\n\t * Updates geometry and styles.\n\t */\n\tupdate() {\n\t\tthis.updateGeometry()\n\t\tthis.updateStyles()\n\t}\n\n\t/**\n\t * By default the flower is drawn in the center of the passed canvas.\n\t * @param {HTMLCanvasElement} canvas\n\t * @param {number} [x] - left position in pixels\n\t * @param {number} [y] - top position in pixels\n\t * @param {number} [w] - width in pixels\n\t * @param {number} [h] - height in pixels\n\t */\n\trenderOnCanvas(canvas, x, y, w, h) {\n\t\tif (canvas && canvas.tagName == \"CANVAS\") {\n\t\t\t/**\n\t\t\t * @param {number} width\n\t\t\t * @param {number} height\n\t\t\t */\n\t\t\tfunction updateParams(width, height) {\n\t\t\t\tif (typeof w != \"number\")\n\t\t\t\t\tw = Math.min(width, height)\n\t\t\t\tif (typeof h != \"number\")\n\t\t\t\t\th = w\n\t\t\t\tif (typeof x != \"number\")\n\t\t\t\t\tx = (width - w) / 2\n\t\t\t\tif (typeof y != \"number\")\n\t\t\t\t\ty = (height - h) / 2\n\t\t\t}\n\n\t\t\tconst image = new Image()\n\t\t\timage.classList.add(\"svgPreview\")\n\t\t\timage.onload = function() {\n\t\t\t\tconst ctx = canvas.getContext(\"2d\")\n\t\t\t\tupdateParams(canvas.width, canvas.height)\n\t\t\t\tctx.drawImage(image, x, y, w, h)\n\t\t\t}\n\t\t\timage.src = this.export(\"imageURL\")\n\t\t}\n\t}\n\n\t/**\n\t * @param {\"svgString\"|\"svgFileString\"|\"imageURL\"|\"jsonString\"} exportType \n\t * @returns {string}\n\t */\n\texport(exportType) {\n\t\tconst xml = new XMLSerializer().serializeToString(this.svgElement)\n\t\tswitch (exportType) {\n\t\t\tcase \"svgString\":\n\t\t\t\treturn xml\n\t\t\t\tbreak\n\t\t\tcase \"svgFileString\": {\n\t\t\t\treturn `<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\\r\\n${xml}`\n\t\t\t\tbreak\n\t\t\t}\n\t\t\tcase \"imageURL\":\n\t\t\t\treturn \"data:image/svg+xml; charset=utf8, \" + encodeURIComponent(xml)\n\t\t\t\tbreak\n\t\t\tcase \"jsonString\":\n\t\t\t\treturn JSON.stringify(this.config, null, 2)\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\t/**\n\t * This is useful sometimes to update the bounds of the svg to correctly contain\n\t * the flower in the container.\n\t */\n\tupdateDrawingSize() {\n\t\tconst _this = this\n\t\tthis.maxWidth = -Infinity\n\n\t\t/**\n\t\t * @param {VectorBloomPath[]} component \n\t\t */\n\t\tfunction loopNodes(component) {\n\t\t\tcomponent.forEach(base => {\n\t\t\t\tbase.nodes.forEach(node => {\n\t\t\t\t\tconst magnitude = node.position.magnitude()\n\t\t\t\t\tif (magnitude > _this.maxWidth) {\n\t\t\t\t\t\t_this.maxWidth = magnitude\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\n\t\tif (!this.petals.length)\n\t\t\tthis.center.forEach(arrangmenet => loopNodes(arrangmenet.bases))\n\t\telse {\n\t\t\tthis.petals.forEach(petals => loopNodes(petals))\n\t\t}\n\t\tthis.maxWidth *= 2\n\n\t\tthis.svgElement.setAttribute(\"pageWidth\", `${this.maxWidth}`)\n\t\tthis.svgElement.setAttribute(\"pageHeight\", `${this.maxWidth}`)\n\t\tthis.svgElement.setAttribute(\"width\", `${this.maxWidth}px`)\n\t\tthis.svgElement.setAttribute(\"height\", `${this.maxWidth}px`)\n\t\tthis.svgElement.setAttribute(\"viewBox\", `0 0 ${this.maxWidth} ${this.maxWidth}`)\n\n\t\tconst containerGroup = this.svgElement.getElementsByTagName(\"g\")[0]\n\t\tcontainerGroup.setAttribute(\"transform\", `translate(${this.maxWidth / 2}, ${this.maxWidth / 2})`)\n\t}\n\n\t/**\n\t * @param { BloomConfig } config\n\t */\n\tstatic FillDefaults(config) {\n\t\tif (!config.petals)\n\t\t\tconfig.petals = []\n\t\tif (!config.center)\n\t\t\tconfig.center = {\n\t\t\t\tradius: 50,\n\t\t\t\tarrangement: []\n\t\t\t}\n\t\tconfig.petals.forEach(fillPetalDefaults)\n\t\tconfig.center.arrangement.forEach(fillCenterDefaults)\n\t}\n}\n\n/**\n * @param {number} angle \n * @returns {number}\n */\nfunction ToRadian(angle) {\n\treturn angle * Math.PI / 180\n}\n\n/**\n * @param {any} value \n * @returns {boolean}\n */\nfunction isNull(value) {\n\treturn value === undefined || value === null\n}\n\n\n/**\n * @param {VectorBloomNode} node \n * @param {VectorBloomNode} originNode \n * @param {number} value \n */\nfunction ApplySmoothing(node, originNode, value) {\n\tconst workerPoint1 = new VectorBloomPoint(0, 0)\n\tconst workerPoint2 = new VectorBloomPoint(0, 0)\n\tworkerPoint1.set(node.position).subtract(originNode.position).normalize()\n\tworkerPoint2.set(node.curveTo.position).subtract(node.position).normalize()\n\tworkerPoint1.add(workerPoint2).normalize()\n\tworkerPoint2.set(workerPoint1).scale(value * node.curveTo.position.distanceFrom(node.position))\n\tnode.controlPoint2.set(node.position).add(workerPoint2)\n\tworkerPoint2.set(workerPoint1).scale(-value * node.position.distanceFrom(originNode.position))\n\tnode.controlPoint1.set(node.position).add(workerPoint2)\n}\n\n/**\n * @param {PetalConfig} config \n */\nfunction fillPetalDefaults(config) {\n\tconst geometry = config.geometry\n\n\tif (!geometry.width || !geometry.count || !geometry.length)\n\t\tconsole.log(\"crucial config missing or invalid config.\")\n\telse {\n\t\tif (isNull(geometry.outerWidth))\n\t\t\tgeometry.outerWidth = geometry.width\n\t\tif (isNull(geometry.angleOffset))\n\t\t\tgeometry.angleOffset = 0\n\t\tif (isNull(geometry.radialOffset))\n\t\t\tgeometry.radialOffset = 0\n\t\tif (isNull(geometry.balance))\n\t\t\tgeometry.balance = 0.5\n\t\tif (isNull(geometry.smoothing))\n\t\t\tgeometry.smoothing = 0\n\t\tif (isNull(geometry.innerWidth))\n\t\t\tgeometry.innerWidth = geometry.width\n\t\tif (isNull(geometry.offsetX))\n\t\t\tgeometry.offsetX = 0\n\t\tif (isNull(geometry.offsetY))\n\t\t\tgeometry.offsetY = 0\n\t}\n\n\tfillFillDefaults(config.fill)\n}\n\n/**\n * @param {FillStyle} fill\n */\nfunction fillFillDefaults(fill) {\n\tfill.color.forEach(stop => {\n\t\tif (isNull(stop.offset))\n\t\t\tstop.offset = 0.5\n\t})\n\tif (isNull(fill.strokeColor))\n\t\tfill.strokeColor = \"#000000\"\n\tif (isNull(fill.strokeWidth))\n\t\tfill.strokeWidth = 0\n\n\tif (!fill.shadow) {\n\t\tfill.shadow = {\n\t\t\tblur: 0,\n\t\t\toffsetX: 0,\n\t\t\toffsetY: 0,\n\t\t\tcolor: \"#000\",\n\t\t\topacity: 1\n\t\t}\n\t}\n}\n\n/**\n * \n * @param {CenterArrangment} config \n */\nfunction fillCenterDefaults(config) {\n\tfillFillDefaults(config.fill.base)\n\tfillFillDefaults(config.fill.tip)\n}\n\n/**\n * Makes a unit vector and returns\n * one perpendicular vector to it\n * @param {VectorBloomPoint} point \n */\nfunction makePerpendicular(point) {\n\tpoint.normalize()\n\tconst x = point.x\n\tconst y = point.y\n\tpoint.x = -y\n\tpoint.y = x\n}\n\n/**\n * @typedef CenterArrangement\n * @property {VectorBloomPath[]} bases\n * @property {VectorBloomPath[]} tips\n */\n\n/**\n * @param {CenterGeometry} arrangement \n * @param {number} radius \n * @returns {CenterArrangement}\n */\nfunction createCenter(arrangement, radius) {\n\tlet n = 0\n\tlet currentRadius = (arrangement.range[0] || 0) * radius\n\tconst minRadius = currentRadius\n\tconst maxRadius = (arrangement.range[1] || 1) * radius\n\tconst radiusRange = maxRadius - currentRadius\n\tconst ageRange = arrangement.age[1] - arrangement.age[0]\n\tconst sizeRange = arrangement.size[1] - arrangement.size[0]\n\n\t/**@type {CenterArrangement} */\n\tconst centerArrangement = {\n\t\tbases: [],\n\t\ttips: []\n\t}\n\tlet angle = 0\n\tif (currentRadius != 0)\n\t\tn = Math.pow(currentRadius / arrangement.density, 2)\n\tdo {\n\t\tangle = n * GOLDEN_RADIANS\n\t\tcurrentRadius = arrangement.density * Math.sqrt(n)\n\t\tconst currentRadiusRatio = (currentRadius - minRadius) / radiusRange\n\t\tconst currentAge = (currentRadiusRatio * ageRange) + arrangement.age[0]\n\t\tconst currentSize = (currentRadiusRatio * sizeRange) + arrangement.size[0]\n\t\tconst { base, tip } = createCenterShape(currentRadius, currentAge, currentSize, angle)\n\t\tif (base)\n\t\t\tcenterArrangement.bases.push(base)\n\t\tif (tip)\n\t\t\tcenterArrangement.tips.push(tip)\n\t\tn++\n\t} while (currentRadius < maxRadius)\n\treturn centerArrangement\n}\n\n/**\n * \n * @param {number} r \n * @param {number} age\n * @param {number} size\n * @param {number} angle \n * @returns {{base: VectorBloomPath, tip: VectorBloomPath}}\n */\nfunction createCenterShape(r, age, size, angle) {\n\tconst workerPoint1 = new VectorBloomPoint(0, 0)\n\tconst workerPoint2 = new VectorBloomPoint(0, 0)\n\tconst workerPoint3 = new VectorBloomPoint(0, 0)\n\tconst workerPoint4 = new VectorBloomPoint(0, 0)\n\tworkerPoint1.set(r * Math.sin(angle), r * Math.cos(angle))\n\n\tconst baseNodes = /** @type {VectorBloomNode[]} */ ([])\n\tconst tipNodes = /** @type {VectorBloomNode[]} */ ([])\n\n\tif (age < 0.5) {\n\t\t/**\n\t\t * this shape is a quadrilateral with points in clockwise order start from South\n\t\t * The south one points towards the center\n\t\t */\n\t\tlet offset = angle + Math.PI\n\t\tconst smoothingFactor = (age < 0.1 ? 0 : size * age)\n\t\tlet floretLength = Math.min(size * 6, (0.5 / age) * size)\n\t\tif (floretLength > r)\n\t\t\tfloretLength = r\n\t\tbaseNodes.push(getRadialNode(offset, floretLength, workerPoint1, 0))\n\t\tfor (let i = 0; i < 3; i++) {\n\t\t\toffset += Math.PI / 2\n\t\t\tbaseNodes.push(getRadialNode(offset, size, workerPoint1, smoothingFactor))\n\t\t}\n\t} else {\n\t\t//create base shape\n\t\tconst fullCirle = Math.PI * 2\n\t\tlet currentAngle = angle\n\t\tconst step = fullCirle / 10\n\t\tlet maxR = size\n\t\tlet minR = size\n\t\tconst deviation = size * (age - 0.5)\n\t\tminR -= deviation\n\t\tconst smoothing = Math.PI * minR / 15\n\t\tfor (let i = 0; i < 10; i++) {\n\t\t\tbaseNodes.push(getRadialNode(currentAngle, ((i % 2 == 0) ? maxR : minR), workerPoint1, smoothing))\n\t\t\tcurrentAngle += step\n\t\t}\n\n\t\tif (age > 0.7) {\n\t\t\t/**\n\t\t\t * create the tip shape. Its basically a stem with a spherical top\n\t\t\t * start with the stem part. can be made with 7 nodes\n\t\t\t * \t\t\t 5\n\t\t\t * \t\t\t/ \\  \t\n\t\t\t * \t\t   6\\  |4\n\t\t\t * \t\t   7/ /3\n\t\t\t *\t\t   / /\n\t\t\t *        / /\n\t\t\t *\t\t1\t2 \n\t\t\t */\n\t\t\tconst hs = size * age / 4\n\t\t\tconst circleR = size / 2\n\t\t\ttipNodes.push(getRadialNode(angle - Math.PI / 2, hs, workerPoint1))\n\t\t\ttipNodes.push(getRadialNode(angle + Math.PI / 2, hs, workerPoint1))\n\t\t\tworkerPoint4.set(workerPoint1).normalize()\n\t\t\tworkerPoint2.set(workerPoint4).scale(circleR * (age - 0.7) * 8).add(workerPoint1)\n\t\t\ttipNodes.push(getRadialNode(angle + Math.PI / 2, hs, workerPoint2))\n\n\t\t\t//sweep a cicle. the following point is the center\n\t\t\tworkerPoint3.set(workerPoint4).scale(circleR).add(workerPoint2)\n\t\t\tlet offset = angle + Math.PI / 2\n\t\t\tfor (let i = 0; i < 3; i++) {\n\t\t\t\ttipNodes.push(getRadialNode(offset, circleR, workerPoint3, -circleR * 0.66))\n\t\t\t\toffset -= Math.PI / 2\n\t\t\t}\n\t\t\ttipNodes.push(getRadialNode(angle - Math.PI / 2, hs, workerPoint2))\n\t\t}\n\t}\n\n\treturn {\n\t\tbase: (baseNodes.length ? new VectorBloomPath(baseNodes) : null),\n\t\ttip: (tipNodes.length ? new VectorBloomPath(tipNodes) : null)\n\t}\n}\n\n/**\n * @param {PetalConfig} petalConfig\n * @param {number} centerRadius\n * @returns  {VectorBloomPath[]}\n */\nfunction createPetals(petalConfig, centerRadius) {\n\tconst petalGeometry = petalConfig.geometry\n\t//start from 0 degrees 12oclock.\n\tlet offset = ToRadian(petalGeometry.angleOffset || 0)\n\tconst step = Math.PI * 2 / petalGeometry.count\n\tconst petals = []\n\tcenterRadius += (petalConfig.geometry.radialOffset || 0) * centerRadius\n\tfor (let i = 0; i < petalGeometry.count; i++) {\n\t\tconst petal = createPetal(petalGeometry, centerRadius, offset)\n\t\tpetals.push(petal)\n\t\toffset += step\n\t}\n\treturn petals\n}\n\n/**\n * A petal is defined by 8 points.\n * @param {PetalGeometry} petalGeometry \n * @param {number} centerRadius \n * @param {number} offset \n * @returns {VectorBloomPath}\n */\nfunction createPetal(petalGeometry, centerRadius, offset) {\n\tconst innerWidthHalf = ToRadian(petalGeometry.innerWidth / 2)\n\tconst outerWidthHalf = ToRadian(petalGeometry.outerWidth / 2)\n\tconst widthHalf = ToRadian(petalGeometry.width / 2)\n\tlet extension = 0\n\tif (petalGeometry.extendOutside)\n\t\textension = (centerRadius + petalGeometry.length) * outerWidthHalf\n\n\tconst centerOffset = new VectorBloomPoint(petalGeometry.offsetX || 0, petalGeometry.offsetY || 0)\n\n\tconst petalNodes = /** @type {VectorBloomNode[]}*/ ([])\n\tpetalNodes.push(\n\t\tgetRadialNode(offset - innerWidthHalf, centerRadius, centerOffset, null, petalGeometry.jitter),\n\t\tgetRadialNode(offset, centerRadius - 10, centerOffset, null, petalGeometry.jitter),\n\t\tgetRadialNode(offset + innerWidthHalf, centerRadius, centerOffset, null, petalGeometry.jitter),\n\t\tgetRadialNode(offset + widthHalf, centerRadius + (petalGeometry.length * petalGeometry.balance), centerOffset, null, petalGeometry.jitter),\n\t\tgetRadialNode(offset + outerWidthHalf, centerRadius + petalGeometry.length, centerOffset, null, petalGeometry.jitter),\n\t\tgetRadialNode(offset, centerRadius + petalGeometry.length + extension, centerOffset, null, petalGeometry.jitter),\n\t\tgetRadialNode(offset - outerWidthHalf, centerRadius + petalGeometry.length, centerOffset, null, petalGeometry.jitter),\n\t\tgetRadialNode(offset - widthHalf, centerRadius + (petalGeometry.length * petalGeometry.balance), centerOffset, null, petalGeometry.jitter)\n\t)\n\tconst petal = new VectorBloomPath(petalNodes)\n\tif (petalGeometry.smoothing) {\n\t\tpetal.nodes.forEach((node, index) => {\n\t\t\tconst fromNode = index === 0 ? petal.nodes[petal.nodes.length - 1] :\n\t\t\t\tpetal.nodes[index - 1]\n\t\t\tApplySmoothing(node, fromNode, petalGeometry.smoothing)\n\t\t})\n\t\tpetal.compilePathData()\n\t}\n\n\treturn petal\n}\n\n/**\n * @param {number} angle \n * @param {number} distance \n * @param {VectorBloomPoint} [position] \n * @param {number} [smoothing]\n * @param {number} [jitter]\n * @returns {VectorBloomNode}\n */\nfunction getRadialNode(angle, distance, position, smoothing, jitter) {\n\tlet x = Math.sin(angle) * distance\n\tlet y = Math.cos(angle) * distance\n\tif (position) {\n\t\tx += position.x\n\t\ty += position.y\n\t}\n\tif (jitter) {\n\t\tx += (Math.random() - 0.5) * jitter\n\t\ty += (Math.random() - 0.5) * jitter\n\t}\n\tconst createdNode = new VectorBloomNode(x, y)\n\tif (smoothing) {\n\t\tconst workerPoint1 = new VectorBloomPoint()\n\t\tworkerPoint1.set(createdNode.position).subtract(position)\n\t\tmakePerpendicular(workerPoint1)\n\t\tcreatedNode.controlPoint1.set(workerPoint1.scale(smoothing)).add(createdNode.position)\n\t\tcreatedNode.controlPoint2.set(workerPoint1.scale(-1).add(createdNode.position))\n\t}\n\n\treturn createdNode\n}\n\n/**\n * \n * @param {string} id \n * @param {GradientStop[]} stops \n * @returns {SVGRadialGradientElement}\n */\nfunction createRadialGradient(id, stops) {\n\tconst radialGradient = document.createElementNS(\"http://www.w3.org/2000/svg\", \"radialGradient\")\n\tradialGradient.id = id\n\tradialGradient.setAttribute(\"cx\", \"0\")\n\tradialGradient.setAttribute(\"cy\", \"0\")\n\tradialGradient.setAttribute(\"fx\", \"0\")\n\tradialGradient.setAttribute(\"fy\", \"0\")\n\tradialGradient.setAttribute(\"r\", \"50%\")\n\tstops.forEach(stopObj => {\n\t\tconst stop = document.createElementNS(\"http://www.w3.org/2000/svg\", \"stop\")\n\t\tstop.setAttribute(\"style\", `stop-color:${stopObj.color}`)\n\t\tstop.setAttribute(\"offset\", ((stopObj.offset == null) ? \"50%\" : (stopObj.offset * 100) + \"%\"))\n\t\tradialGradient.appendChild(stop)\n\t})\n\tradialGradient.setAttribute(\"gradientUnits\", \"userSpaceOnUse\")\n\tradialGradient.classList.add(\"vectorBloomTypes\")\n\treturn radialGradient\n}\n\n/**\n * @param {string} id \n * @param {ShadowConfig} shadowConfig \n * @returns {SVGFilterElement}\n */\nfunction createShadowFilter(id, shadowConfig) {\n\tconst filter = document.createElementNS(\"http://www.w3.org/2000/svg\", \"filter\")\n\tfilter.setAttribute(\"x\", \"-150%\")\n\tfilter.setAttribute(\"y\", \"-150%\")\n\tfilter.setAttribute(\"width\", \"300%\")\n\tfilter.setAttribute(\"height\", \"300%\")\n\tfilter.id = id\n\n\t/**\n\t * FeDropShadow is a short hand notation for a composite of filter. \n\t * It may not be supported by all renderers. Alteast Inkscape doesn't \n\t * support it. May be its not spec?\n\t */\n\t/* const feShadowElem = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feDropShadow\")\n\tfeShadowElem.setAttribute(\"dx\", shadowConfig.offsetX + \"\")\n\tfeShadowElem.setAttribute(\"dy\", shadowConfig.offsetY + \"\")\n\tfeShadowElem.setAttribute(\"stdDeviation\", shadowConfig.blur + \"\")\n\tfeShadowElem.setAttribute(\"flood-color\", shadowConfig.color)\n\tfeShadowElem.setAttribute(\"flood-opacity\", shadowConfig.opacity + \"\") */\n\n\t//feFlood\n\tconst feFlood = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feFlood\")\n\tfeFlood.setAttribute(\"flood-opacity\", shadowConfig.opacity + \"\")\n\tfeFlood.setAttribute(\"flood-color\", shadowConfig.color)\n\tfeFlood.setAttribute(\"result\", \"flood\")\n\n\t//feOffset\n\tconst feOffset = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feOffset\")\n\tfeOffset.setAttribute(\"dx\", (shadowConfig.offsetX || 0) + \"\")\n\tfeOffset.setAttribute(\"dy\", (shadowConfig.offsetY || 0) + \"\")\n\tfeOffset.setAttribute(\"result\", \"offset\")\n\n\t//feGaussianBlur\n\tconst feGB = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feGaussianBlur\")\n\tfeGB.setAttribute(\"stdDeviation\", (shadowConfig.blur || 0) + \"\")\n\tfeGB.setAttribute(\"in\", \"composite1\")\n\tfeGB.setAttribute(\"result\", \"blur\")\n\n\t//composites\n\tconst feComposite1 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feComposite\")\n\tfeComposite1.setAttribute(\"in\", \"flood\")\n\tfeComposite1.setAttribute(\"in2\", \"SourceGraphic\")\n\tfeComposite1.setAttribute(\"operator\", \"in\")\n\tfeComposite1.setAttribute(\"result\", \"composite1\")\n\n\tconst feComposite2 = document.createElementNS(\"http://www.w3.org/2000/svg\", \"feComposite\")\n\tfeComposite2.setAttribute(\"in\", \"SourceGraphic\")\n\tfeComposite2.setAttribute(\"in2\", \"offset\")\n\tfeComposite2.setAttribute(\"operator\", \"over\")\n\tfeComposite2.setAttribute(\"result\", \"composite2\")\n\n\tfilter.appendChild(feFlood)\n\tfilter.appendChild(feComposite1)\n\tfilter.appendChild(feGB)\n\tfilter.appendChild(feOffset)\n\tfilter.appendChild(feComposite2)\n\n\tfilter.classList.add(\"vectorBloomTypes\")\n\treturn filter\n}\n\n/**\n * @returns {SVGSVGElement}\n */\nfunction createSVGElement() {\n\tconst svgElement = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\")\n\tsvgElement.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\")\n\tsvgElement.setAttribute(\"class\", \"vectorBloomSVG\")\n\tsvgElement.setAttribute(\"preserveAspectRatio\", \"xMidYMid meet\")\n\tsvgElement.style.width = \"100%\"\n\tsvgElement.style.height = \"100%\"\n\n\t//ensure this is the first element\n\tconst defs = document.createElementNS(\"http://www.w3.org/2000/svg\", \"defs\")\n\tdefs.classList.add(\"vectorBloomDefs\")\n\tsvgElement.appendChild(defs)\n\n\tconst styleTag = document.createElementNS(\"http://www.w3.org/2000/svg\", \"style\")\n\tstyleTag.type = \"text/css\"\n\tsvgElement.appendChild(styleTag)\n\n\tconst translateGroup = document.createElementNS(\"http://www.w3.org/2000/svg\", \"g\")\n\tsvgElement.appendChild(translateGroup)\n\n\treturn svgElement\n}\n\n/**\n * @typedef CircleConfig\n * @property {number} radius\n * @property {string} color\n * @property {number} [x] \n * @property {number} [y] \n */\n\n/**\n * @param {CircleConfig} config\n * @returns {SVGCircleElement}\n */\nfunction createCircleElement(config) {\n\tconst circle = document.createElementNS(\"http://www.w3.org/2000/svg\", \"circle\")\n\tcircle.setAttribute(\"cx\", (isNull(config.x) ? 0 : config.x) + \"\")\n\tcircle.setAttribute(\"cy\", (isNull(config.y) ? 0 : config.y) + \"\")\n\tcircle.setAttribute(\"r\", config.radius + \"\")\n\tcircle.setAttribute(\"fill\", config.color)\n\treturn circle\n}","/**\n * @class VectorBloomPoint\n * Creates object that holds x and y coordinates of a two dimensional Point.\n * Provides methods for common operations with the point.\n */\n export class VectorBloomPoint {\n\t/**\n\t * @param {number} [x]\n\t * @param {number} [y]\n\t */\n\tconstructor(x = 0, y = 0) {\n\t\t/** @type {number} */\n\t\tthis.x = x\n\t\t/** @type {number} */\n\t\tthis.y = y\n\t}\n\n\t/**\n\t * @param {number|{x:number, y:number}} _x \n\t * @param {number} [_y] \n\t * @returns {VectorBloomPoint}\n\t */\n\tset(_x, _y) {\n\t\tif (typeof _x == \"number\") {\n\t\t\tthis.x = _x\n\t\t\tthis.y = _y\n\t\t} else {\n\t\t\tthis.x = _x.x\n\t\t\tthis.y = _x.y\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * @returns {number}\n\t */\n\tmagnitude() {\n\t\treturn Math.sqrt((this.x * this.x) + (this.y * this.y))\n\t}\n\n\t/**\n\t * Creates a unit vector in place\n\t * @returns {VectorBloomPoint}\n\t */\n\tnormalize() {\n\t\tconst magnitude = this.magnitude()\n\t\tthis.x /= magnitude\n\t\tthis.y /= magnitude\n\t\treturn this\n\t}\n\n\t/**\n\t * @param {number} factor \n\t * @returns {VectorBloomPoint}\n\t */\n\tscale(factor) {\n\t\tthis.x *= factor\n\t\tthis.y *= factor\n\t\treturn this\n\t}\n\n\t/**\n\t * Creates a unit vector but returns shiny new Point Object\n\t * @returns {VectorBloomPoint}\n\t */\n\tunit() {\n\t\treturn new VectorBloomPoint(this.x, this.y).scale(1 / this.magnitude())\n\t}\n\n\t/**\n\t * The slope of the the unit line from origin to point in radians\n\t * @returns {number}\n\t */\n\tangle() {\n\t\tlet angle = Math.atan2(this.y, this.x)\n\t\tif (angle < 0) {\n\t\t\tangle += 2 * Math.PI\n\t\t}\n\t\treturn angle\n\t}\n\n\t/**\n\t * @param {number|VectorBloomPoint} _point \n\t * @param {number} [y] \n\t * @returns {number}\n\t */\n\tdistanceFrom(_point, y) {\n\t\treturn Math.sqrt(this.squaredDistanceFrom(_point, y))\n\t}\n\n\t/**\n\t * @param {number|{x:number, y:number}} _point \n\t * @param {number} [y] \n\t * @returns {number}\n\t */\n\tsquaredDistanceFrom(_point, y) {\n\t\tlet xd, yd\n\t\tif (typeof _point == \"number\") {\n\t\t\txd = _point - this.x\n\t\t\tyd = y - this.y\n\t\t} else {\n\t\t\txd = _point.x - this.x\n\t\t\tyd = _point.y - this.y\n\t\t}\n\n\t\treturn (xd * xd) + (yd * yd)\n\t}\n\n\t/**\n\t * Calculates the unit vector describing the direction to the passed\n\t * point\n\t * @param {VectorBloomPoint} point \n\t * @returns {VectorBloomPoint}\n\t */\n\tdirection(point) {\n\t\tlet distance = this.distanceFrom(point)\n\t\treturn new VectorBloomPoint((this.x - point.x), (this.y - point.y)).scale(1 / distance)\n\t}\n\n\t/**\n\t * @param {number|VectorBloomPoint} _point \n\t * @param {number} [y] \n\t * @returns {VectorBloomPoint}\n\t */\n\tadd(_point, y) {\n\t\tif (typeof _point == \"number\") {\n\t\t\tthis.x += _point\n\t\t\tthis.y += y\n\t\t} else {\n\t\t\tthis.x += _point.x\n\t\t\tthis.y += _point.y\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * @param {number|VectorBloomPoint} _point \n\t * @param {number} [y] \n\t * @returns {VectorBloomPoint}\n\t */\n\tsubtract(_point, y) {\n\t\tif (typeof _point == \"number\") {\n\t\t\tthis.x -= _point\n\t\t\tthis.y -= y\n\t\t} else {\n\t\t\tthis.x -= _point.x\n\t\t\tthis.y -= _point.y\n\t\t}\n\t\treturn this\n\t}\n\n\t/**\n\t * @param {number|VectorBloomPoint} _point \n\t * @param {number} [y] \n\t * @returns {VectorBloomPoint}\n\t */\n\tmidPoint(_point, y) {\n\t\tlet xd, yd\n\t\tif (typeof _point == \"number\") {\n\t\t\txd = _point\n\t\t\tyd = y\n\t\t} else {\n\t\t\txd = _point.x\n\t\t\tyd = _point.y\n\t\t}\n\t\treturn new VectorBloomPoint(this.x + xd, this.y + yd).scale(1 / 2)\n\t}\n\n\t/**\n\t * Rotates a point about another point by angle provided\n\t * @param {VectorBloomPoint} point \n\t * @param {number} angle In radians\n\t * @returns {VectorBloomPoint}\n\t */\n\trotateAbout(point, angle) {\n\t\tconst dx = this.x - point.x\n\t\tconst dy = this.y - point.y\n\n\t\tconst cosx = Math.cos(angle)\n\t\tconst sinx = Math.sin(angle)\n\n\t\tthis.x = point.x + (dx * cosx) + (dy * sinx)\n\t\tthis.y = point.y + (dy * cosx) - (dx * sinx)\n\t\t// invert y axis in dom\n\n\t\treturn this\n\t}\n\n\t/**\n\t * @param {VectorBloomPoint} point \n\t * @returns {boolean}\n\t */\n\tisSame(point) {\n\t\tif (this.x == point.x && this.y == point.y) {\n\t\t\treturn true\n\t\t}\n\t\treturn false\n\t}\n\n\t/**\n\t * @param {VectorBloomPoint[]} points\n\t * @returns {VectorBloomPoint}\n\t */\n\tstatic ComputeCenter(points) {\n\t\tlet x = 0,\n\t\t\ty = 0\n\t\tpoints.forEach(function(element) {\n\t\t\tx += element.x\n\t\t\ty += element.y\n\t\t})\n\t\treturn new VectorBloomPoint(x, y).scale(1 / points.length)\n\t}\n}","import { VectorBloomPoint } from \"./vector-bloom-point.js\"\n\nexport class VectorBloomNode {\n\t/**\n\t * \n\t * @param {number} x \n\t * @param {number} y \n\t */\n\tconstructor(x, y) {\n\t\tthis.position = new VectorBloomPoint(x, y)\n\t\tthis.curveTo = /** @type {VectorBloomNode} */ (null)\n\t\tthis.controlPoint1 = new VectorBloomPoint(x, y)\n\t\tthis.controlPoint2 = new VectorBloomPoint(x, y)\n\t}\n}\n\nexport class VectorBloomPath {\n\t/**\n\t * @param {VectorBloomNode[]} nodes \n\t */\n\tconstructor(nodes) {\n\t\tthis.nodes = nodes\n\t\tthis.element = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\")\n\t\tthis.nodes.forEach((node, index) => node.curveTo = this.nodes[index + 1])\n\t\tthis.nodes[this.nodes.length - 1].curveTo = this.nodes[0]\n\t\tthis.compilePathData()\n\t}\n\n\t/**\n\t * Call this method whenever updating nodes.\n\t * Updates the path attribute (d) on the svg element and assigns it to pathData member\n\t * @returns {string}\n\t */\n\tcompilePathData() {\n\t\t/**\n\t\t * @param {VectorBloomNode} node \n\t\t */\n\t\tfunction writeData(node) {\n\t\t\tpathString += `${node.controlPoint2.x} ${node.controlPoint2.y} `\n\t\t\tpathString += `${node.curveTo.controlPoint1.x} ${node.curveTo.controlPoint1.y} `\n\t\t\tpathString += `${node.curveTo.position.x} ${node.curveTo.position.y} `\n\t\t}\n\n\t\tlet pathString = `M ${this.nodes[0].position.x} ${this.nodes[0].position.y} C `\n\t\tconst target = this.nodes.length - 1\n\t\tfor (let i = 0; i < target; i++) {\n\t\t\tconst node = this.nodes[i]\n\t\t\twriteData(node)\n\t\t}\n\t\twriteData(this.nodes[target])\n\t\tpathString += \"Z \"\n\t\tthis.element.setAttribute(\"d\", pathString)\n\t\tthis.pathData = pathString\n\t\treturn pathString\n\t}\n}"],"names":[],"version":3,"file":"vector-bloom.module.js.map"}